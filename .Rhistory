movieMasterdf$production_companies <- if(!is.na(movieMasterdf$production_companies)) { regmatches(as.character(movieMasterdf$production_companies),
regexpr("^[^\\']+",
as.character(movieMasterdf$production_companies)))
}
movieMasterdf$production_companies <- for (i in 1:nrow(movieMasterdf$production_companies)){
if(!is.na(i)) {
regmatches(as.character(movieMasterdf$production_companies[i]),
regexpr("^[^\\']+",
as.character(movieMasterdf$production_companies[i])))
}
}
movieMasterdf$production_companies <- for (i in 1:length(movieMasterdf$production_companies)){
if(!is.na(i)) {
regmatches(as.character(movieMasterdf$production_companies[i]),
regexpr("^[^\\']+",
as.character(movieMasterdf$production_companies[i])))
}
}
movieMasterdf$production_companies
head(movieMasterdf$production_companies)
movieMaster <- separate(movieMaster, genres, c("start","genre1", "others", "genre2", "others2"), sep = "'name': '", remove = FALSE)
movieMaster <- separate(movieMaster, genre1, c("1st genre", "other"), sep = "'", remove = FALSE)
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster <- separate(movieMaster, 'production_companies', c("start","producation comp","others","prod2", "others2"))
head(movieMaster$production_companies)
movieMasterdf <- movieMaster
head(movieMasterdf$production_companies)
movieMaster <- read.csv('/Users/kayinho/Documents/IIT/Sem2 - 2020Spring/CSP571/git_project/movie_forecasting/CSP571_Movie_Profits_Project/the-movies-dataset/movies_metadata.csv'
,header = T, sep = ",")
movieMaster <- movieMaster[,c('id','budget','genres','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster$release_date <- as.Date(movieMaster$release_date)
movieMaster <- movieMaster[(movieMaster$release_date > "2000-01-01"),]
movieMaster <- movieMaster[(movieMaster$release_date < "2017-12-31"),]
movieMaster <- separate(movieMaster, genres, c("start","genre1", "others", "genre2", "others2"), sep = "'name': '", remove = FALSE)
movieMaster <- separate(movieMaster, genre1, c("1st genre", "other"), sep = "'", remove = FALSE)
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster <- separate(movieMaster, 'production_companies', c("start","producation comp","others","prod2", "others2"))
head(movieMaster, n = 50)
movieMaster <- read.csv('/Users/kayinho/Documents/IIT/Sem2 - 2020Spring/CSP571/git_project/movie_forecasting/CSP571_Movie_Profits_Project/the-movies-dataset/movies_metadata.csv'
,header = T, sep = ",")
movieMaster <- movieMaster[,c('id','budget','genres','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster$release_date <- as.Date(movieMaster$release_date)
movieMaster <- movieMaster[(movieMaster$release_date > "2000-01-01"),]
movieMaster <- movieMaster[(movieMaster$release_date < "2017-12-31"),]
movieMaster <- separate(movieMaster, genres, c("start","genre1", "others", "genre2", "others2"), sep = "'name': '", remove = FALSE)
movieMaster <- separate(movieMaster, genre1, c("1st genre", "other"), sep = "'", remove = FALSE)
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster <- separate(movieMaster, 'production_companies', c("start","producation comp","others","prod2", "others2"), "'name': '")
head(movieMaster, n = 50)
movieMaster <- read.csv('/Users/kayinho/Documents/IIT/Sem2 - 2020Spring/CSP571/git_project/movie_forecasting/CSP571_Movie_Profits_Project/the-movies-dataset/movies_metadata.csv'
,header = T, sep = ",")
movieMaster <- movieMaster[,c('id','budget','genres','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster$release_date <- as.Date(movieMaster$release_date)
movieMaster <- movieMaster[(movieMaster$release_date > "2000-01-01"),]
movieMaster <- movieMaster[(movieMaster$release_date < "2017-12-31"),]
movieMaster <- separate(movieMaster, genres, c("start","genre1", "others", "genre2", "others2"), sep = "'name': '", remove = FALSE)
movieMaster <- separate(movieMaster, genre1, c("1st genre", "other"), sep = "'", remove = FALSE)
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster <- separate(movieMaster, 'production_companies', c("start","producation comp","others"), "'name': '")
head(movieMaster, n = 50)
movieMaster <- read.csv('/Users/kayinho/Documents/IIT/Sem2 - 2020Spring/CSP571/git_project/movie_forecasting/CSP571_Movie_Profits_Project/the-movies-dataset/movies_metadata.csv'
,header = T, sep = ",")
movieMaster <- movieMaster[,c('id','budget','genres','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster$release_date <- as.Date(movieMaster$release_date)
movieMaster <- movieMaster[(movieMaster$release_date > "2000-01-01"),]
movieMaster <- movieMaster[(movieMaster$release_date < "2017-12-31"),]
movieMaster <- separate(movieMaster, genres, c("start","genre1"), "'name': '")
movieMaster <- separate(movieMaster, genre1, c("1st genre", "other"), "'")
head(movieMaster, n = 50)
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster <- separate(movieMaster, 'production_companies', c("start","producation comp","others"), "'name': '")
movieMaster <- separate(movieMaster, 'producation comp', c('1st production company'), ", 'id': ")
head(movieMaster, n = 50)
movieMaster <- movieMaster[,c('id','budget','genres','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster <- movieMaster[(movieMaster$release_date > "2000-01-01"),]
movieMaster <- movieMaster[(movieMaster$release_date < "2017-12-31"),]
movieMaster <- separate(movieMaster, genres, c("start","genre1"), "'name': '")
movieMaster <- separate(movieMaster, genre1, c("1st genre"), "'")
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster <- separate(movieMaster, 'production_companies', c("start","producation comp","others"), "'name': '")
movieMaster <- separate(movieMaster, 'producation comp', c('1st production company'), "', 'id': ")
movieMaster <- read.csv('/Users/kayinho/Documents/IIT/Sem2 - 2020Spring/CSP571/git_project/movie_forecasting/CSP571_Movie_Profits_Project/the-movies-dataset/movies_metadata.csv'
,header = T, sep = ",")
movieMaster <- movieMaster[,c('id','budget','genres','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster$release_date <- as.Date(movieMaster$release_date)
movieMaster <- movieMaster[(movieMaster$release_date > "2000-01-01"),]
movieMaster <- movieMaster[(movieMaster$release_date < "2017-12-31"),]
movieMaster <- separate(movieMaster, genres, c("start","genre1"), "'name': '")
movieMaster <- separate(movieMaster, genre1, c("1st genre"), "'")
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster <- separate(movieMaster, 'production_companies', c("start","producation comp","others"), "'name': '")
movieMaster <- separate(movieMaster, 'producation comp', c('1st production company'), "', 'id': ")
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','1st production company','release_date','revenue', 'runtime')]
head(movieMaster, n = 50)
movieMaster <- read.csv('/Users/kayinho/Documents/IIT/Sem2 - 2020Spring/CSP571/git_project/movie_forecasting/CSP571_Movie_Profits_Project/the-movies-dataset/movies_metadata.csv'
,header = T, sep = ",")
movieMaster <- movieMaster[,c('id','budget','genres','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster$release_date <- as.Date(movieMaster$release_date)
movieMaster <- movieMaster[(movieMaster$release_date > "2000-01-01"),]
movieMaster <- movieMaster[(movieMaster$release_date < "2017-12-31"),]
movieMaster <- separate(movieMaster, genres, c("start","genre1"), "'name': '")
movieMaster <- separate(movieMaster, genre1, c("1st genre"), "'")
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster <- separate(movieMaster, 'production_companies', c("start","producation comp","others"), "'name': '")
movieMaster <- separate(movieMaster, 'producation comp', c('1st production company'), "', 'id': ")
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','1st production company','release_date','revenue', 'runtime')]
head(movieMaster)
head(movieMaster, n = 100)
movieMaster <- tolower(movieMaster$`1st genre`, movieMaster$original_title, movieMaster$`1st production company`)
movieMaster <- tolower(movieMaster)
head(movieMaster, n = 100)
movieMaster <- read.csv('/Users/kayinho/Documents/IIT/Sem2 - 2020Spring/CSP571/git_project/movie_forecasting/CSP571_Movie_Profits_Project/the-movies-dataset/movies_metadata.csv'
,header = T, sep = ",")
movieMaster <- movieMaster[,c('id','budget','genres','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster$release_date <- as.Date(movieMaster$release_date)
movieMaster <- movieMaster[(movieMaster$release_date > "2000-01-01"),]
movieMaster <- movieMaster[(movieMaster$release_date < "2017-12-31"),]
movieMaster <- separate(movieMaster, genres, c("start","genre1"), "'name': '")
movieMaster <- separate(movieMaster, genre1, c("1st genre"), "'")
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster <- separate(movieMaster, 'production_companies', c("start","producation comp","others"), "'name': '")
movieMaster <- separate(movieMaster, 'producation comp', c('1st production company'), "', 'id': ")
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','1st production company','release_date','revenue', 'runtime')]
head(movieMaster, n = 100)
tolower(movieMaster$`1st genre`)
head(movieMaster, n = 100)
movieMaster$`1st genre` <- tolower()
head(movieMaster, n = 100)
movieMaster$`1st genre` <- tolower(movieMaster$`1st genre`)
head(movieMaster, n = 100)
movieMaster$original_title <- tolower(movieMaster$original_title)
movieMaster$`1st production company` <- tolower(movieMaster$`1st production company`)
head(movieMaster, n = 100)
write.csv(movieMaster, file = "cleaned_movie_metadata")
write.csv(movieMaster, file = "/Users/kayinho/Documents/IIT/Sem2 - 2020Spring/CSP571/git_project/movie_forecasting/CSP571_Movie_Profits_Project/the-movies-dataset/cleaned_movies_metadata.csv")
movieMaster <- read.csv('/Users/kayinho/Documents/IIT/Sem2 - 2020Spring/CSP571/git_project/movie_forecasting/CSP571_Movie_Profits_Project/the-movies-dataset/movies_metadata.csv'
,header = T, sep = ",")
movieMaster <- movieMaster[,c('id','budget','genres','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster$release_date <- as.Date(movieMaster$release_date)
movieMaster <- movieMaster[(movieMaster$release_date > "2000-01-01"),]
movieMaster <- movieMaster[(movieMaster$release_date < "2017-12-31"),]
head(movieMaster, n= 50)
movieMasterdf$production_companies <- sapply(as.character(movieMasterdf$production_companies),
strsplit(movieMasterdf$production_companies),
split = "^[^\\']+")
movieMaster$production_companies[1]
movieMaster$production_companies
movieMaster[1, production_companies]
movieMaster[1, 'production_companies']
movieMaster['production_companies']
movieMaster['cleaned title'] <- gsub(' ', '', movieMaster$original_title)
head(movieMaster, n = 50)
movieMaster <- read.csv('/Users/kayinho/Documents/IIT/Sem2 - 2020Spring/CSP571/git_project/movie_forecasting/CSP571_Movie_Profits_Project/the-movies-dataset/movies_metadata.csv'
,header = T, sep = ",")
movieMaster <- movieMaster[,c('id','budget','genres','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster$release_date <- as.Date(movieMaster$release_date)
movieMaster <- movieMaster[(movieMaster$release_date > "1999-12-31"),]
movieMaster <- movieMaster[(movieMaster$release_date < "2018-01-01"),]
movieMaster <- separate(movieMaster, genres, c('start','genre1'), "'name': '")
movieMaster <- separate(movieMaster, genre1, c("1st genre"), "'")
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster <- separate(movieMaster, 'production_companies', c("start","producation comp","others"), "'name': '")
movieMaster <- separate(movieMaster, 'producation comp', c('1st production company'), "', 'id': ")
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','1st production company','release_date','revenue', 'runtime')]
movieMaster$`1st genre` <- tolower(movieMaster$`1st genre`)
movieMaster$original_title <- tolower(movieMaster$original_title)
movieMaster$original_title<-gsub('[[:punct:] ]+',' ',movieMaster$original_title)
movieMaster['cleaned title'] <- gsub(' ', '', movieMaster$original_title)
movieMaster$`1st production company` <- tolower(movieMaster$`1st production company`)
head(movieMaster, n = 50)
setwd("~/Documents/IIT/Sem2 - 2020Spring/CSP571/git_project/movie_forecasting/CSP571_Movie_Profits_Project")
movieMaster <- read.csv('/Users/kayinho/Documents/IIT/Sem2 - 2020Spring/CSP571/git_project/movie_forecasting/CSP571_Movie_Profits_Project/the-movies-dataset/movies_metadata.csv'
,header = T, sep = ",")
movieMaster <- movieMaster[,c('id','budget','genres','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster$release_date <- as.Date(movieMaster$release_date)
movieMaster <- movieMaster[(movieMaster$release_date > "1999-12-31"),]
movieMaster
movieMaster <- read.csv('/Users/kayinho/Documents/IIT/Sem2 - 2020Spring/CSP571/git_project/movie_forecasting/CSP571_Movie_Profits_Project/the-movies-dataset/movies_metadata.csv'
,header = T, sep = ",")
movieMaster <- movieMaster[,c('id','budget','genres','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster$release_date <- as.Date(movieMaster$release_date)
movieMaster <- movieMaster[(movieMaster$release_date > "1999-12-31"),]
movieMaster <- separate(movieMaster, genres, c('start','genre1'), "'name': '")
movieMaster <- separate(movieMaster, genre1, c("1st genre"), "'")
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster <- read.csv('/Users/kayinho/Documents/IIT/Sem2 - 2020Spring/CSP571/git_project/movie_forecasting/CSP571_Movie_Profits_Project/the-movies-dataset/movies_metadata.csv'
,header = T, sep = ",")
movieMaster <- movieMaster[,c('id','budget','genres','original_title','production_companies','release_date','revenue', 'runtime')]
movieMaster$release_date <- as.Date(movieMaster$release_date)
movieMaster <- movieMaster[(movieMaster$release_date > "1999-12-31"),]
movieMaster <- movieMaster[(movieMaster$release_date < "2018-01-01"),]
movieMaster <- separate(movieMaster, genres, c('start','genre1'), sep = "'name': '")
movieMaster <- separate(movieMaster, genre1, c("1st genre"), sep = "'")
movieMaster <- separate(movieMaster, 'production_companies', c("start","producation comp","others"), sep = "'name': '")
movieMaster <- separate(movieMaster, 'producation comp', c('1st production company'), sep = "', 'id': ")
movieMaster <- movieMaster[,c('id','budget','1st genre','original_title','1st production company','release_date','revenue', 'runtime')]
movieMaster$`1st genre` <- tolower(movieMaster$`1st genre`)
movieMaster$original_title <- tolower(movieMaster$original_title)
movieMaster$original_title<- gsub('[[:punct:] ]+',' ',movieMaster$original_title)
movieMaster['cleaned title'] <- gsub(' ', '', movieMaster$original_title)
#movieMaster$`1st production company` <- tolower(movieMaster$`1st production company`)
head(movieMaster, n = 500)
write.csv(movieMaster, file = "cleaned_movies_metadata_1.csv")
nht <- tapply(df$`Total Housing Spend`, list(df$`Normalized Housing Type`, df$Vendor), sum, na.rm=TRUE)
nht
nht(is.na(nht)) <- 0
nht[is.na(nht)] <- 0
nht
nht <- round(addmargins(nht))
nht
nht <- tapply(df$`Total Housing Spend`, list(df$`Normalized Housing Type`, df$Vendor), sum, na.rm=TRUE)
nht[is.na(nht)] <- 0
nht <- addmargins(nht)
nht
nht <- tapply(df$`Total Housing Spend`, list(df$`Normalized Housing Type`, df$Vendor), sum)
nht
nht[is.na(nht)] <- 0
nht
register_google(key = "AIzaSyA4vVR3hB_3BH2K9QiPRd_TiHIDtbHStms")
geocode("Sacramento CA")
phCombo
phCombo[,'Combo'] <- paste(phCombo$`Policyholder City`, phCombo$`Policy holder State`)
phComboTop20 <- as.data.frame(sort(table(phCombo[,'Combo']), decreasing = TRUE))
phComboTop20
# 2 points
# 4. Obtain top 20 most frequent Policyholder City and Policy holder State combos
phCombo <- df[,c('Policyholder City', 'Policy holder State')]
phCombo[,'Combo'] <- paste(toupper(phCombo$`Policyholder City`), phCombo$`Policy holder State`)
phComboTop20 <- as.data.frame(sort(table(phCombo[,'Combo']), decreasing = TRUE))
phComboTop20
phComboTop20 <- as.data.frame(sort(table(phCombo[,'Combo']), decreasing = TRUE)[1:20])
phComboTop20
install.packages('tidygeocoder')
library('tidygeocoder')
geocode("Sacramento CA")
geocode(phComboTop20$Var1)
?geocode
library('rvest')
library('tidyr')
url = 'https://www.latlong.net/category/cities-236-15.html'
latlonWeb <- read_html(url)
latlonTable <- html_table(latlonWeb, css = 'table')
latlonTable <- html_nodes(latlonWeb, css = 'table')
latlon <- html_table(latlonTable)[[1]]
latlon
latlon <- separate(latlon, 'Place Name',c('city','state'), sep = ', ')
latlon
geocode(phComboTop20$Var1)
geocode('Los Angelos, CA')
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9),
function(url){
url %>% read_html() %>%
html_nodes(css = 'table')
})
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9),
function(url){
url %>% read_html() %>%
html_nodes(css = 'table')
})
latlonWeb <- lapply(paste('https://www.latlong.net/category/cities-236-15-',1:9),
function(url){
url %>% read_html() %>%
html_nodes('table')
})
wines <- lapply(paste0('http://www.winemag.com/?s=washington%20merlot&drink_type=wine&page=', 1:39),
function(url){
url %>% read_html() %>%
html_nodes(".review-listing .title") %>%
html_text()
})
head(wines, n = 100)
cat('014')
latlonWeb <- lapply(paste('https://www.latlong.net/category/cities-236-15-',1:9),
function(url){
url %>% read_html() %>%
html_nodes('table')
})
latlonWeb <- lapply(paste('https://www.latlong.net/category/cities-236-15-',1),
function(url){
url %>% read_html() %>%
html_nodes('table')
})
wines <- lapply(paste0('http://www.winemag.com/?s=washington%20merlot&drink_type=wine&page=', 1:39),
function(url){
url %>% read_html() %>%
html_nodes(".review-listing .title") %>%
html_text()
})
head(wines, n = 100)
wines <- lapply(paste0('http://www.winemag.com/?s=washington%20merlot&drink_type=wine&page=', 1:39),
function(url){
url %>% read_html() %>%
html_nodes(".review-listing .title") %>%
html_table()
})
latlonWeb <- lapply(paste('http://www.latlong.net/category/cities-236-15-',1:9),
function(url){
url %>% read_html() %>%
html_nodes('table')
})
latlonWeb <- lapply(paste('http://www.latlong.net/category/cities-236-15-',1:9),
function(url){
url %>% read_html() %>%
html_nodes(latlonWeb, css = 'table')
})
latlonWeb <- lapply(paste('https://www.latlong.net/category/cities-236-15'),
function(url){
url %>% read_html() %>%
html_nodes(latlonWeb, css = 'table')
})
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15'),
function(url){
url %>% read_html() %>%
html_nodes(latlonWeb, css = 'table')
})
latlon <- html_table(latlonTable)[[1]]
latlon
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15',1:9),
function(url){
url %>% read_html() %>%
html_nodes(css = 'table') %>%
html_table()[[1]]
})
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15',1:9),
function(url){
try(
url %>% read_html() %>%
html_nodes(css = 'table') %>%
html_table()[[1]]
)
})
paste0('https://www.latlong.net/category/cities-236-15',1:9)
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9),
function(url){
try(
url %>% read_html() %>%
html_nodes(css = 'table') %>%
html_table()[[1]]
)
})
paste0('https://www.latlong.net/category/cities-236-15-',1:9)
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9),
function(url){
try(
url %>% read_html() %>%
html_nodes('table') %>%
html_table()[[1]]
)
})
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9),
function(url){
try(
url %>% read_html(curl()) %>%
html_nodes('table') %>%
html_table()[[1]]
)
})
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9),
function(url){
tryCatch(
url %>% as.character() %>%
read_html() %>%
html_nodes('table') %>%
html_table()[[1]]
)
})
latlonWeb <- sapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9),
function(url){
tryCatch(
url %>% as.character() %>%
read_html() %>%
html_nodes('table') %>%
html_table()[[1]]
)
})
latlonWeb <- sapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9),
function(url){
tryCatch(
url %>% as.character() %>%
read_html() %>%
html_nodes() %>%
html_table()[[1]]
)
})
cat(\140\)
cat(\014\)
latlonWeb <- sapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9),
function(url){
url %>% as.character() %>%
read_html() %>%
html_nodes() %>%
html_table()[[1]]
})
latlonWeb <- sapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9),
function(url){
url %>% as.character() %>%
read_html() %>%
html_nodes() %>%
html_table()[[1]]
})
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9,".html"),
function(url){
url %>% read_html(url) %>%
html_nodes(css = 'table') %>%
html_table()[[1]]
})
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9,".html"),
function(url){
url %>% read_html(url) %>%
html_nodes(css = 'table') %>%
html_table()[[1]]
})
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9,".html"),
function(url){
url %>% read_html() %>%
html_nodes(css = 'table') %>%
html_table()[[1]]
})
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9,".html"),
function(url){
url %>% read_html() %>%
html_nodes(css = 'table') %>%
})
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9,".html"),
function(url){
url %>% read_html() %>%
html_nodes(css = 'table')
})
latlon <- html_table(latlonWeb)[[1]]
latlonWeb
url = 'http://www.espn.com/nfl/superbowl/history/mvps'
sbWebpage <- read_html(url)
sbWebpage
sbTable <- html_nodes(sbWebpage, css = 'table')
sbTable
sb <- html_table(sbTable)[[1]]
sb
latlon <- html_table(latlonTable)[[1:9]]
latlon <- html_table(latlonTable)[[1:2]]
latlon
latlon <- html_table(latlonTable)[[1-9]]
latlon <- html_table(latlonTable)[1:9]
latlon
latlon <- html_table(latlonTable)[1]
latlon
latlon <- html_table(latlonTable)[2]
latlon
latlonTable
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9,".html"),
function(url){
url %>% read_html() %>%
html_nodes(css = 'table')
})
latlonTable <- html_nodes(latlonWeb, css = 'table')
(latlonWeb
latlonWeb
latlonWeb
latlon <- html_table(latlonWeb)[[1]]
latlon <- html_table(latlonWeb)[[1:9]]
latlon <- html_table(latlonWeb)[[1]]
latlon <- html_table(latlonWeb)[1]
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9,".html"),
function(url){
url %>% read_html() %>%
html_nodes(css = 'table') %>%
html_table()[[1]]
})
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9,".html"),
function(url){
url %>% read_html() %>%
html_nodes(css = 'table') %>%
html_table()[1]
})
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9,".html"),
function(url){
url %>% read_html() %>%
html_nodes(css = 'table') %>%
html_table()
})
latlonWeb
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9,".html"),
function(url){
url %>% read_html() %>%
html_nodes(css = 'table') %>%
html_table()[[1]][[1]]
})
latlonWeb <- lapply(paste0('https://www.latlong.net/category/cities-236-15-',1:9,".html"),
function(url){
url %>% read_html() %>%
html_nodes(css = 'table') %>%
html_table()
})
latlon <- as.data.frame(latlonWeb)
latlon <- as.data.frame(unlist(latlonWeb))
latlon
latlon <- data.frame(latlonWeb)
latlon <- do.call(rbind,latlonWeb)
latlon
latlon <- as.data.frame(unlist(latlonWeb, recursive = FALSE))
latlon <- unlist(lapply(latlonWeb, function(x) if(is.data.frame(x)) list(x) else x), recursive = FALSE)
latlon
class(latlon)
latlon <- as.data.frame(unlist(lapply(latlonWeb, function(x) if(is.data.frame(x)) list(x) else x), recursive = FALSE))
install.packages('vincenty')
library('vincenty')
register_google(key = "AIzaSyA4vVR3hB_3BH2K9QiPRd_TiHIDtbHStms")
geocode("Sacramento CA")
library('ggmap')
register_google(key = "AIzaSyA4vVR3hB_3BH2K9QiPRd_TiHIDtbHStms")
geocode("Sacramento CA")
geocode(Sacramento CA)
geocode('Sacramento CA')
